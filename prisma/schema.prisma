generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  username  String @unique   @db.VarChar(100)
  password  String @db.VarChar(256)
  avatar    File? @relation(fields: [avatarId], references: [id])
  avatarId  String? @unique
  skills    UserOnSkill[]
  contact   UserOnContact[]
  education UserOnEducation[]
  project   UserOnProject[]
}

model File {
  id        String @id @default(uuid())
  url       String @db.VarChar(100)
  path      String @db.VarChar(256)
  user      User?
  skill     Skill?
  education Education? 
  contact   Contact?
  project   Project?
}

model Education {
  id        String @id @default(uuid())
  avatar    File? @relation(fields: [avatarId], references: [id])
  avatarId  String? @unique
  degree    String
  endDate   DateTime
  field     String
  link      String
  startDate DateTime 
  title     String @db.VarChar(200)
  user      UserOnEducation[]
}

model Contact {
  id        String @id @default(uuid())
  avatar    File? @relation(fields: [avatarId], references: [id])
  avatarId  String? @unique
  link      String
  title     String
  username  String
  users     UserOnContact[]
}

model Project {
  id          String @id @default(uuid())
  avatar      File? @relation(fields: [avatarId], references: [id])
  avatarId    String? @unique
  description String
  githubLink  String
  link        String
  title       String
  type        String
  skills      ProjectOnSkill[]
  users       UserOnProject[]
}

model Skill {
  id        String @id @default(uuid())
  title     String @db.VarChar(200)
  avatar    File? @relation(fields: [avatarId], references: [id])
  avatarId  String? @unique
  projects  ProjectOnSkill[]
  users     UserOnSkill[]
}

model ProjectOnSkill {
  skill      Skill     @relation(fields: [skillId], references: [id])
  skillId    String
  project    Project @relation(fields: [projectId], references: [id])
  projectId  String 
  
  @@id([skillId, projectId])
}
model UserOnSkill {
  skill    Skill     @relation(fields: [skillId], references: [id])
  skillId  String
  user     User @relation(fields: [userId], references: [id])
  userId   String 
  
  @@id([skillId, userId])
}
model UserOnContact {
  contact    Contact @relation(fields: [contactId], references: [id])
  contactId  String
  user       User @relation(fields: [userId], references: [id])
  userId     String 
  
  @@id([contactId, userId])
}
model UserOnEducation {
  education    Education @relation(fields: [educationId], references: [id])
  educationId  String
  user         User @relation(fields: [userId], references: [id])
  userId       String 
  
  @@id([educationId, userId])
}

model UserOnProject {
  user       User @relation(fields: [userId], references: [id])
  userId     String
  project    Project @relation(fields: [projectId], references: [id])
  projectId  String 
  
  @@id([userId, projectId])
} 